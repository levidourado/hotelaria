name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Instalação do PHP e extensões
        run: sudo apt-get install -y php php-xml php-mbstring
      - name: Instalação do composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
      - name: Instalação das dependências
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Lint PHP
        run: ./vendor/bin/phpcs --standard=PSR12 src/
      - name: Correções de código PHP com o PHPCBF
        run: ./vendor/bin/phpcbf --standard=PSR12 src/
        continue-on-error: true
      - name: Verifica se todas as correções foram aplicadas
        run: |
          RESULT=$(./vendor/bin/phpcs --standard=PSR12 src/);
          echo "$RESULT";
          if [[ $RESULT == *"FOUND 0 ERRORS AND 0 WARNINGS"* ]]; then
            echo "Todos os problemas de estilo foram corrigidos.";
          else
            echo "Existem problemas de estilo não corrigidos.";
            exit 1;
          fi

  build:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        run: echo "A etapa de build não é necessária para este projeto PHP."

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Instalação do PHP e extensões
        run: sudo apt-get install -y php php-xml php-mbstring
      - name: Instalação do composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
      - name: Instalação das dependências
        run: composer install
      - name: Rodar testes unitários
        run: ./vendor/bin/phpunit --configuration phpunit.xml

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Configuração do Git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
      - name: Tag release
        run: |
          git tag -a "v$(date +'%Y.%m.%d.%H%M%S')" -m "Generated tag from GitHub Actions"
          git push --tags
